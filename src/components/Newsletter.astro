<div class="newsletter bg-secondary py-8 lg:py-16">
	<div class="container px-4 2xl:px-0">
		<div class="newsletter__content md:flex md:gap-8 lg:py-8 mb-8 md:mb-4">
			<div class="newsletter__details md:w-1/2">
				<section>
					<h3 class="newsletter__title text-white mb-4 md:mb-8">
						Assine nossa Newsletter
					</h3>
					<p class="newsletter__description text-white mb-4 md:mb-0">
						Subscribe for Updates: Stay informed about the latest investor updates, 
						financial results, and announcements by subscribing to our newsletter. 
					</p>
				</section>
			</div>

			<div class="newsletter__form md:w-1/2 md:pt-5">
				<form name="newsForm">
					<div class="newsletter__inptButton js-validate">
						<input type="email" name="email" id="email" class="newsletter__inptEmail" placeholder="Entre seu e-mail" required>
						<label for="email" class="text-white"></label>
						<button class="js-newsletter newsletter__btnSubmit text-primary px-4 md:px-6">Assinar</button>
						<span class="newsletter__formError">Campo obrigatório</span>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>

<script>
	
	import { isEmail } from "../helpers/form";

	let time = 0;
	const snackBar = document.querySelector('.snackbar');
	const btnSubmit = document.querySelector('.js-newsletter');	

	btnSubmit.addEventListener('click', async (e) => {
		e.preventDefault();

		const newsForm = document.querySelector('form[name="newsForm"]');
		const fields = newsForm.querySelectorAll('[required]');
		let hasError = false;

		for(let field of fields){
			field.closest('.js-validate').classList.remove('is__error');	

			if(field.value.trim() === ""){
				field.closest('.js-validate').classList.add('is__error');
				hasError = true;				
			}

			if(field.type == "email" &&  field.value.trim() !== "" && !isEmail(field.value)) {
				field.closest('.js-validate').classList.add('is__error');
				field.closest('.js-validate').querySelector('.newsletter__formError').innerHTML = 'E-mail inválido';
				hasError = true;	
			}
		}

		if(!hasError) {

			clearTimeout(time);

			btnSubmit.setAttribute('disabled', true);

			const { email } = newsForm;

			fetch('https://enx3n0dz7s8ms.x.pipedream.net', {
				method: 'POST',
				headers: {
					"Content-Type": 'application/json'
				},
				body: JSON.stringify({					
					email: email.value
				})				
			})
			.then((res) => res.json())
			.then((data) => {
				if(data.success) {
					snackBar.classList.add('snackbar--success', 'show');
					snackBar.querySelector('.snack__message').innerHTML = 'Cadastro realizado com sucesso!';					

					time = setTimeout(() => {
						snackBar.classList.remove('snackbar--success', 'show');
					},4000);

					newsForm.reset();
					btnSubmit.removeAttribute("disabled");
				}				
			})
			.catch((e) => {
				const err = document.querySelector('.js-validate');
				if(err.length) {
					err.classList.remove('is__error');
				}
				console.error(e);
				newsForm.reset();
				btnSubmit.removeAttribute("disabled");
			})			
		}	
	});
</script>

<style lang="scss">

	.newsletter { 
		&__title {
			font-weight: 800;
			font-size: 1.2rem;
		}		

		&__description {
			line-height: 1.4;
		}

		&__inptButton {
			position: relative;
			display: flex;
		}

		input {
			width: 100%;
			height: 45px;
			border: 0;
			border-radius: 8px 0 0 8px;			
			background: rgba(255,255,255, .3);
			padding: 27px 32px 27px 32px;			

			&::placeholder {
				color: #FFFFFF;
				font-weight: 500;
				font-size: 0.875rem;
			}

			&:focus {
				border: 0;
				outline: none;
			}

			~ label {
				position: absolute;
				top: 50%;
				left: 16px;
				transform: translateY(-50%);	
				transition: 0.3s;
				letter-spacing: 0.5px;
			}

			&:focus ~ label {
				top: 30%;
				left: 16px;
				transform: translateY(-80%);
				font-size: 0.75rem;
				color: #262E32;
				font-weight: 600;
				transition: 0.3s;
			}
		}	
		
		&__btnSubmit {
			font-weight: 600;			
			background-color: #FFFFFF;
			border-radius: 0 8px 8px 0;
		}

		&__formError {
			position: absolute;
			bottom: -25px;
			font-size: .75rem;
			color: #FFFFFF;
			opacity: 0;
			visibility: hidden;
		}
		
		&__inptButton {
			&.is__error {
				.newsletter__formError{
					opacity: 1;
					visibility: visible;
				}
			}
		}
	}

	.js-newsletter {
		&:disabled {
			background: #CCCCCC;
			transition: background .5s;
		}
	}

	@media(screen(md)) {
		.newsletter { 
			&__title {
				font-weight: 800;
			}

			&__description {
				font-size: 1.25rem;
			}

			input {
				border-radius: 15px 0 0 15px;	
			}

			&__btnSubmit {		
				width: 118px;	
				border-radius: 0 15px 15px 0;
			}

		}
	}

	@media(screen(lg)) {
		.newsletter { 
			&__title {
				font-size: 3rem;
			}

			input {
				height: 84px;		
				font-size: 1.2rem;		
			}
		}
	}
	
</style>
